{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww33100\viewh19080\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs40 \cf0 Authentication using Session\
\
Type Authentication : Session, JWT, OAuth, Ad-hoc\
\
Conclusion per Step :\
1. Buat template node js app seperti biasa\
\
2. Buat model 	:	-	user database\
			fungsi	:	-	connectDB()\
							-	isAuth()\
							-	passwordUtils yang berisi genPassword&validPassword\
							-	passport.js yang berisi custom strategy\
\
3. Kegunaan 	:	- 	connectDB() = connect ke database\
					:	-	isAuth() = untuk mengautentikasikan user untuk masuk ke routet tertentu\
						-	genPassword = untuk generate password dari input user dengan metode hashing module crypto\
							salt dan hasil hasing dimasukkan ke dalam user database\
						-	validPassword = untuk memvalidasi password input user dengan mengambil input user, kemudian usernamnya dicari\
							di database, jika ketemu, maka salt di database user akan dpakai untuk hashing dengan input user dengan module crypto\
							setelah itu dibandingkan dengan hasil hash di database user\
						-	passport.js =>  verifyCallback() = untuk mekanisme verify user di database.\
							Menggunakan metode findOne , jika tidak ada user, return done(null, false) yang berarti return null error, dan return false\
							Jika validPassword true, maka return done(null, user) yang berarti return null error dan return user\
								=> definisikan strategy yang berisi keyword new LocalStrategy dengan parameter verify callback lalu panggil di middleware\
								=> copy passport serialize dan deserialize dari passport npm\
}